# 仅用于本地docker环境测试（80端口代理http请求）

server {
    listen 80;
    server_name  thornasa.com; #改为自己的域名，没域名修改为127.0.0.1:80
    charset utf-8;
    rewrite ^(.*)$ https://$host:443$1 permanent;
}

server {

    gzip on;
    # 服务器端口使用443，开启ssl, 这里ssl就是上面安装的ssl模块
    listen       443 ssl;
    # 域名，多个以空格分开
    server_name  thornasa.com;

    # ssl证书地址
    ssl_certificate     /usr/share/nginx/ssl/8737820_thornasa.com.pem;  # pem文件的路径
    ssl_certificate_key  /usr/share/nginx/ssl/8737820_thornasa.com.key; # key文件的路径

    # ssl验证相关配置
    ssl_session_timeout  5m;    #缓存有效期
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;    #加密算法
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;    #安全链接可选的加密协议
    ssl_prefer_server_ciphers on;   #使用服务器端的首选算法

    location / {
        proxy_pass http://web:8000; # 反向代理 django容器8000端口，web为django容器名称，切记不要写域名或者ip
        proxy_set_header Host $host;
        proxy_redirect off;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    location /static/ {
        alias /usr/share/nginx/html/static/; #静态资源路径
    }
    location /media/ {
        alias /usr/share/nginx/html/media/; #上传文件路径
    }

}